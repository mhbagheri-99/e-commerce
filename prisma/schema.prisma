// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String  @id @default(uuid())
  name          String
  priceInCents  Int
  filePath      String
  imagePath     String
  description   String
  isAvailable   Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  orders        Order[]
  downloads     DownloadVerification[]
  discountCodes DiscountCode[]
}

model User {
  id            String  @id @default(uuid())
  email         String  @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  orders        Order[]
}


model Order {
  id            String  @id @default(uuid())
  userId        String
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId     String
  product       Product @relation(fields: [productId], references: [id], onDelete: Restrict)
  totalInCents  Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  discountCodeId  String?
  discountCode  DiscountCode? @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id            String  @id @default(uuid())
  createdAt     DateTime    @default(now())
  expiresAt     DateTime
  productId     String
  product       Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

enum DiscountCodeType {
  PERCENTAGE
  FIXED
}

model DiscountCode {
  id            String  @id @default(uuid())
  code          String  @unique
  discountAmount Int
  discountType  DiscountCodeType
  limit         Int?
  used          Int     @default(0)
  isActive      Boolean @default(true)
  allProducts   Boolean @default(false)
  expiresAt     DateTime?
  createdAt     DateTime    @default(now())
  products      Product[]
  orders        Order[]
}